{"meta":{"title":"阿木の博客","subtitle":"记录生活中的点点滴滴","description":"","author":"阿木","url":"http://amustrive.github.io.git","root":"/"},"pages":[],"posts":[{"title":"","slug":"javaweb-jsp内置对象","date":"2020-12-29T13:15:40.314Z","updated":"2020-12-29T13:15:58.195Z","comments":true,"path":"2020/12/29/javaweb-jsp内置对象/","link":"","permalink":"http://amustrive.github.io.git/2020/12/29/javaweb-jsp%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/","excerpt":"","text":"jsp内置对象jsp有九大内置对象：request（得到用户的请求信息）、response（服务器向客户端的回应信息）、session（保存每一个用户的信息（在一次会话中））、Application（所有用户的共享信息）、out（页面输出）、pagecontext（jsp页面容器）、page（从页面中表示出来的一个Servlet实例）、config（服务器配置,可以获得初始化参数）、exception（jsp页面所发生的异常，在错误页面中起作用）。 四种属性范围（作用域）： page作用域：在一个页面范围内有效，通过pageContext对象访问 request作用域：在一个服务器请求范围内有效 session作用域：在一次回话范围内有效 application作用域：在一个应用服务器范围内有效 1. request对象 内置对象request封装了用户提交的信息，该对象调用相应的方法就可以获取封装的信息。 常用方法： 用户通常使用HTML表单提交信息，request对象可以使用getParmeter（）来获取信息 在获取、处理 HTML汉子信息的时候可以使用setCharacterEncoding（String simple）方法设置自己的编码 可以使用getRequestDispatcher（String path）方法获取RequestDispatcher对象，调用改对象的forward（request，response）方法可以完成转发请求。 2. response对象 sendRedirect（String path）来完成重定向请求。 转发与重定向的区别 请求次数：重定向是浏览器向服务器发送一个请求并收到响应后再次向一个新地址发出请求，转发是服务器收到请求后为了完成响应跳转到一个新的地址；重定向至少请求两次，转发请求一次； 地址栏不同：重定向地址栏会发生变化，转发地址栏不会发生变化； 是否共享数据：重定向两次请求不共享数据，转发一次请求共享数据（在request级别使用信息共享，使用重定向必然出错）； 跳转限制：重定向可以跳转到任意URL，转发只能跳转本站点资源； 发生行为不同：重定向是客户端行为，转发是服务器端行为； 3. session对象 HTTP 是一个无状态协议，因此需要借助 session 对象记录有关连接的信息，它是 HttpSession 接口类的一个实例。(注意：同一个用户在不同的 web 服务目录的 session 是互不干扰的） session 对象使用下列方法处理数据：public Object setAttribute(String key, Object obj) 向会话加入数据。public Object getAttribute(String key) 返回会话中的指定数据。public void removeAttribute(String name) 移除会话中的指定数据。 session 对象的生存期限：invalidate() 方法使其无效public boolean isNew() 判断是否为新建 session 对象public long getLastAccessedTime() 获取 session 对象创建的时间，单位毫秒。public itn getMaxInactiveInterval() 获取 session 最后一次被操作的时间，单位秒。 4. application对象 application 对象服务器创建，每个 Web 服务目录下的 application 对象由所有用户共享，但不同 Web 服务目录下不互相同。 常用方法：public void setAttribute(String key, Object obj)，向对象添加数据public Object getAttribute(String key)，从对象读取数据public void removeAttribute(String key)，从对象删除特定数据 注意任何用户对该对象的操作都会影响到其他用户。在某些情况下，对该对象的操作需要同步处理。 5. out对象 out 对象是一个输出流，用来向用户端输出数据。 out.print()，输出值out.flush()，输出缓冲区的内容out.close()，关闭流","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-12-28T11:21:36.531Z","updated":"2020-12-28T11:27:17.148Z","comments":true,"path":"2020/12/28/hello-world/","link":"","permalink":"http://amustrive.github.io.git/2020/12/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Hello HexoQuick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}